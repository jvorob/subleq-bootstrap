#Hello world program in hex3
#This one rewritten for quad-aligned subleq
#basically just need 0-padding after every op
#
#
#Copies bytes from 0x40 until it hits a null,
#text string is stored as 0041, 0020, etc
#prints to stdout
#can compile it with `grep <test.hex1 -v '#' | interp hex1 >test.bin`

#Z, 0, entry Z2     #P1, M1, 0, 0
 0  0  30    0       1 FFFF  0  0

#0x8: I O A B     0  0xD:halt
      0 0 0 0     0  0 0 D


# 0x10: ALU
# & | ^ _   << >> _ _
  0 0 0 0   0  0  0 0
  
# 0x18: vars
#  p v                p=0xFF00=-0x100
FF00 0 0 0   0 0 0 0


@30 #loop:
 19  19  ?+1  0  #  V   V
?+7 ?+6  ?+1  0  #  X   X 
 18 ?+2  ?+1  0  #  P   X
  0  19  ?+1  0  #  X:_ V    # V = -*(-P)
 19   0  D0   0  #  V   Z halt  #if '\0', halt
  0   0  ?+1  0  #  Z   Z
 19   9  ?+1  0  #  V   O
  4  18 30    0  #  P1  P loop


@D0 #halt:
0 0 D0 0

@100
# "Hello World\n\0"
48 65 6C 6C    6F 20 57 6F    72 6C 64 0A  0 0 0 0

#0x50


